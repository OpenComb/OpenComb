var RenderBuffer = require("./RenderBuffer.js") ;
var RenderContext = require("ocTemplate/lib/RenderContext.js") ;
var Template = require("ocTemplate/lib/Template.js") ;
var TemplateCaches = require("ocTemplate/lib/TemplateCaches.js") ;





var View = module.exports = Template.extend({

	useWrapper: true
	, filename: null

	, createRenderContext: function()
	{
		return new View.RenderContext(this) ;
	}
}) ;


var TemplateParser = require("ocTemplate/lib/Parser.js") ;
module.exports.parser = new TemplateParser() ;
module.exports.parser.registerShaderDefine(require("./shaders/view")) ;
module.exports.parser.registerShaderDefine(require("./shaders/resource")) ;



module.exports.Caches = TemplateCaches.extend({
	ctor: function()
	{
		this._super() ;
		this._tempateclass = View ;
	}
	, load: function(filename,from,callback,parser)
	{
		var view = this._super(filename,from,callback,parser||View.parser) ;
		view.filename = filename ;
		return view ;
	}
}) ;

module.exports.Caches.singleton = new module.exports.Caches ;

module.exports.createNullContext = function()
{
	return new View.RenderContext(null) ;
}

module.exports.RenderContext = RenderContext.extend({

	ctor: function(view)
	{
		this._super(view) ;

		this._children = {} ;
		this._name = "" ;
		this.buff = new RenderBuffer ;
		this.wrapperClasses = ["ocview"]
	}

	, createWrapperHead: function(tagName)
	{
		var html = "<"+ (tagName||'div') +' class="'+this.wrapperClasses.join(' ')+'"' ;
		html+= ' controller="'+(this.model.$controllerpath||"")+'"' ;
		html+= ' sumsign="'+(this.model.$sumsign||"...")+'"' ;
		if(this.tpl && this.tpl.onshowScript)
		{
			html+= ' onshow="'+this.tpl.onshowScript+'"' ;
		}
		html+= ">" ;

		return html ;
	}

	/**
	 * 清理多余的对象引用，为输出到前端做准备
	 */
	, cleanup: function()
	{
		this.tpl = this.tpl? this.tpl.filename: null ;
		if(this.buff)
		{
			this.buff.destroy() ;
		}
		this.buff = undefined ;
		this.queue = undefined ;
		this._children = undefined ;
		this._name = undefined ;
		this.model = undefined ;
	}

	, destroy: function()
	{
		if(this.buff)
		{
			this.buff.destroy() ;
		}
		this.buff = undefined ;
		this.model = undefined ;
	}

}) ;
module.exports.RenderContext.className = "View.RenderContext" ;


module.exports.__SHIPPABLE = true ;
