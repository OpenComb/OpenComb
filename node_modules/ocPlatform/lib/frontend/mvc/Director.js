var Class = require("ocClass/lib/Class.js") ;
var View = require("ocPlatform/lib/frontend/mvc/View.js") ;
var Switch = require("ocPlatform/lib/frontend/mvc/Switch.js") ;
var Nut = require("ocPlatform/lib/mvc/Nut.js") ;

var Director = module.exports = Class.extend({

	ctor: function($document)
	{
		this.$document = $document || $(document) ;
		this._request = null ;
	}

	, setup: function()
	{
		var director = this ;

		function requestViaElementEvent(url,data,ele)
		{
			if( !url || /^\s*javascript\s*:/i.test(url) || /^https?:\/\//i.test(url) )
			{
				return ;
			}

			var controller = url[0]=='/'? url.substr(1): url ;

			var direct = $(ele).attr("direct") || "lazy" ;
			switch(direct)
			{
				case 'view' :
					target = $(ele).parents(".ocview")[0] ;
					data["@layout"] = false ;
					break ;


				case 'top' :
					target = $($(ele).parents(".oclayout")[0])
						.find(".ocview")[0] ;
					data["@layout"] = false ;
					break ;


				case 'lazy' :
					data["@sumsigns"] = [] ;
					$("[sumsign]").each(function(){
						data["@sumsigns"].push( $(this).attr("sumsign") ) ;
					}) ;
					target = null ;
					break ;

				case 'none' :
				default :
					console.log("warning: "+ele.tagName+"标签的direct无效",ele) ;
					return ;
			}

			director.request(controller,data,target) ;

			// 取消浏览器默认行为
			return false ;
		}

		// for link(a tag)
		this.$document.on("click","a",function(){
			return requestViaElementEvent($(this).attr("href"),{},this) ;
		}) ;

		// for form
		this.$document.on("submit","form",function(){
			var data = {} ;
			$.each($(this).serializeArray(),function(i,ipt){
				data[ipt.name] = ipt.value || '' ;
			}) ;
			return requestViaElementEvent( $(this).attr("action"), data, this ) ;
		}) ;

	}

	, request: function(controller,data,target)
	{
		data = data || {}
		data["@render"] = false ;

		// 一次只请求一个视图
		if(this._request)
		{
			this._request.abort() ;
		}

		var director = this ;
		$.ajax({
			url: '/'+controller
			, data: data
			, dataType: "json"
			, success: function(nut)
			{
				Nut.restore(nut,function(err,nut){
					if(err)
					{
						throw err ;
					}

					console.log(nut) ;

					if( !target )
					{
						target = (function findAvailLayout( nut )
						{
							if( nut._children && nut._children.layout )
							{
								var $layout = $("[sumsign="+nut._children.layout.model['$sumsign']+"]") ;
								// bingo !
								if( $layout.length )
								{
									delete nut._children.layout ;

									// just here !
									return $layout.find(".ocview")[0] ;
								}
								else
								{
									return findAvailLayout(nut._children.layout) ;
								}
							}

							return null ;
						}) (nut) ;
					}

					if(!target)
					{
						// 最上层的 ocview
						target = $(".ocview")[0] ;
					}

					// 装配视图
					var rootview = nut.assembleView() ;

					// 渲染试图
					nut.render(function(err,html){
						if(err)
						{
							throw err ;
						}
						console.log(rootview.buff.toString()) ;

						// 创建视图
						var $view = $(rootview.buff.toString()) ;
						View.buildView($view[0]) ;

						Switch.replacein($view[0],target) ;
					}) ;

				}) ;
			}
			, beforeSend: function(req)
			{
				director._request = req ;
			}
		}) ;
	}

},{


}) ;


